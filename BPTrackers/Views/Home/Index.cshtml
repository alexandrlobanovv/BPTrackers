@model IEnumerable<BPTrackers.Models.Invoice>

@{
    ViewBag.Title = "Home Page";
    Layout = null;
}

<head>

    <script type="text/javascript" src="~/Scripts/jquery-3.4.1.js"></script>
    <script type="text/javascript" src="~/Scripts/bootstrap.bundle.js"></script>

    <script src="~/Scripts/jquery-3.4.1.js" type="text/javascript"></script>
    <link href="~/Content/themes/flick/theme.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/jquery.jqGrid/ui.jqgrid.css" rel="stylesheet" type="text/css" />
    <style>
        th.ui-th-column div {
            white-space: normal !important;
            height: auto !important;
            padding: 2px;
        }


        .ui-jqgrid .ui-pg-input {
            height: 20px;
        }

        .ui-jqgrid .ui-jqgrid-pager {
            height: 40px;
        }

            .ui-jqgrid .ui-jqgrid-pager .ui-pg-div {
                font-size: 14px;
            }

        .clickedRow {
            background-color: #0073EA;
            color: #ffffff;
        }
    </style>
    <script src="~/Scripts/jquery-ui-1.8.11.min.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery.jqGrid.min.js" type="text/javascript"></script>
    <script src="~/Scripts/i18n/grid.locale-ru.js" type="text/javascript"></script>
    <script type="text/javascript" src="~/Scripts/CustomScript/selectrow.js"></script>
    <script type="text/javascript">


        $(document).ready(function () {
            let carriers = "";

            $.ajax({
                type: "GET",
                url: '@Url.Action("GetCarrier")',
                async: false,
                success: function (data) {
                    carriers = data;
                }
            });

        $("#jqg").jqGrid({
            url: '@Url.Action("GetData")',
            datatype: "json",
            colNames: ['Id', 'Id', 'Номер перемещения', 'Дата', 'Ответственный', 'Отправитель', 'Получатель', 'Id Посылки', 'Перевозчик', 'Трек номер', 'Статус посылки', 'Передано в службу доставки', 'Доставлено'],
            colModel: [
                { name: 'Id', index: 'Id', width: 30, stype: 'text', sorttype: 'int' },
                { name: 'Id', index: 'Id', width: 30, stype: 'text', sorttype: 'int', editable: true, hidden: true },
                { name: 'Invoice_number', index: 'Invoice_number', editable: true, edittype: 'text', width: 180, sortable: true },
                {
                    name: 'Date', index: 'Date', width: 100, align: 'right', editable: true, edittype: "text",
                    editoptions: {
                        dataInit: function (element) {
                            $(element).datepicker({
                                autoclose: true,
                                format: 'yyyy-mm-dd',
                                orientation: 'auto bottom'
                            });
                        }
                    }
                    , sortable: true, sorttype: 'date', formatter: 'date', formatoptions: { srcformat: 'SortableDateTime', newformat: 'd:m:Y'}},
                { name: 'Responsible', index: 'Responsible', editable: true, edittype: 'text', width: 135, sortable: true },

                { name: 'Parcel.Department_sender.Name', index: 'Parcel.Department_sender.Name', editable: false, edittype: 'text', width: 120, align: 'right', sortable: true },
                { name: 'Parcel.Department_destination.Name', index: 'Parcel.Department_destination.Name', editable: false, edittype: 'text', width: 120, align: 'right', sortable: true },
                { name: 'Parcel.Id', index: 'Parcel.Id', stype: 'text', hidden: true, editable: true },
                { name: 'Parcel.Carrier.Name', index: 'Parcel.Carrier.Name', editable: true, edittype: 'select', editoptions: { value: carriers }, width: 110, align: 'right', sortable: true },
                { name: 'Parcel.Track_number', index: 'Parcel.Track_number', editable: true, edittype: 'text', width: 150, align: 'right', sortable: true },
                { name: 'Parcel.Status', index: 'Parcel.Status', editable: false, edittype: 'text', width: 150, align: 'right', sortable: true },
                { name: 'Parcel.Date_of_delivery', index: 'Parcel.Date_of_delivery', editable: false, edittype: 'data', width: 100, align: 'right' },
                { name: 'Parcel.Date_of_receiving', index: 'Parcel.Date_of_receiving', editable: false, edittype: 'data', width: 100, align: 'right' },
            ],
            rowNum: 30, // число отображаемых строк
            //rowList: [10, 20, 30],
            pager: '#jpager',
            height: '69vh',
            autowidth: true,
            loadonce:true, // загрузка только один раз
            sortname: 'Id', // сортировка по умолчанию по столбцу Id
            sortorder: "desc", // порядок сортировки
            gridComplete: function () {
                $('.jqgrow').click(function (e) {
                    
                    $(".jqgrow").children().removeClass('clickedRow');
                    $(this).children().addClass('clickedRow');
                });
            },
            //postdata: {

            //}
            },);
            $("#jqg").jqGrid('navGrid', '#jpager', {

        search: true,
        searchtext: "Поиск",
        refresh: false,
        add: true, // добавление
        del: true, // удаление
        edit: true, // редактирование
        view: true, // просмотр записи
        viewtext: "Смотреть",
        viewtitle: "Выбранная запись",
        addtext: "Добавить",
        edittext: "Изменить",
        deltext: "Удалить"
    },
    update("edit"), // обновление
    update("add"), // добавление
    update("del") // удаление
            );


           

    function update(act) {
        return {
            closeAfterAdd: true, // закрыть после добавления
            height: 500,
            width: 600,
            closeAfterEdit: true, // закрыть после редактирования
            reloadAfterSubmit: true, // обновление
            drag: true,
            onclickSubmit: function (params) {
                var list = $("#jqg");
                var selectedRow = list.getGridParam("selrow");
                rowData = list.getRowData(selectedRow);

                if (act === "add")
                {
                    params.url = '@Url.Action("Create")';
                }
                else if (act === "del")
                    params.url = '@Url.Action("Delete")';
                else if (act === "edit")
                    params.url = '@Url.Action("Edit")';
            },
            afterSubmit: function (response, postdata) {
                $(this).jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid')// обновление грида
                return [true, "", 0]
            }
        };
            };
           
        });

        
    </script>

</head>

<h2>Budpostach TREKERS</h2>
<table id="jqg"></table>
<div id="jpager"></div>

<script>
    
</script>